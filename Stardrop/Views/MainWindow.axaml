<Window xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:vm="using:Stardrop.ViewModels"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:sys="clr-namespace:System;assembly=netstandard"
        xmlns:i="clr-namespace:Projektanker.Icons.Avalonia;assembly=Projektanker.Icons.Avalonia"
        xmlns:conv="clr-namespace:Stardrop.Converters;assembly=Stardrop"
		xmlns:i18n="clr-namespace:Stardrop.Utilities.Extension"
        mc:Ignorable="d" d:DesignWidth="800" d:DesignHeight="450"
        x:Class="Stardrop.Views.MainWindow"
        Title="Stardrop"
        MinWidth="400"
        MinHeight="400"
        Width="1430"
        Height="800"
        Background="{DynamicResource ThemeBackgroundBrush}"
        HasSystemDecorations="{Binding HasSystemDecorations}"
        ExtendClientAreaToDecorationsHint="true"
        ExtendClientAreaChromeHints="{Binding ChromeHint}"
        ExtendClientAreaTitleBarHeightHint="-1"
        CanResize="True"
        Opened="MainWindow_Opened"
        Closing="MainWindow_Closing"
        WindowStartupLocation="CenterScreen"
        Icon="/Assets/icon.ico">

	<Window.Resources>
		<conv:EnumConverter x:Key="EnumToStringConverter"/>
	</Window.Resources>

	<Window.Styles>
		<Style Selector="MenuItem.Bar Separator">
			<Setter Property="Border.Background" Value="{DynamicResource HighlightForegroundBrush}"/>
		</Style>
		<Style Selector="MenuItem.Bar">
			<Setter Property="Foreground" Value="{DynamicResource ThemeForegroundBrush}"/>
		</Style>
		<Style Selector="MenuItem.Bar:selected /template/ ContentPresenter#PART_HeaderPresenter">
			<Setter Property="TextBlock.Foreground" Value="{DynamicResource HighlightForegroundBrush}"/>
		</Style>
		<Style Selector="MenuItem.Bar:selected /template/ Border#PART_LayoutRoot">
			<Setter Property="BorderBrush" Value="{DynamicResource ThemeBackgroundBrush}" />
		</Style>
		<Style Selector="Menu > MenuItem">
			<Setter Property="Template">
				<ControlTemplate>
					<Border Name="PART_LayoutRoot"
							Background="{TemplateBinding Background}"
							BorderBrush="{TemplateBinding BorderBrush}"
							BorderThickness="{TemplateBinding BorderThickness}"
							CornerRadius="{TemplateBinding CornerRadius}">
						<Panel>
							<ContentPresenter Name="PART_HeaderPresenter"
											  Content="{TemplateBinding Header}"
											  VerticalAlignment="Center"
											  HorizontalAlignment="Stretch"
											  Margin="{TemplateBinding Padding}">
								<ContentPresenter.DataTemplates>
									<DataTemplate DataType="sys:String">
										<AccessText Text="{Binding}" />
									</DataTemplate>
								</ContentPresenter.DataTemplates>
							</ContentPresenter>
							<Popup Name="PART_Popup"
								   WindowManagerAddShadowHint="False"
								   MinWidth="{Binding Bounds.Width, RelativeSource={RelativeSource TemplatedParent}}"
								   IsLightDismissEnabled="True"
								   IsOpen="{TemplateBinding IsSubMenuOpen, Mode=TwoWay}"
								   OverlayInputPassThroughElement="{Binding $parent[Menu]}">
								<Border Background="{DynamicResource ThemeBackgroundBrush}"
										BorderBrush="{DynamicResource MenuFlyoutPresenterBorderBrush}"
										BorderThickness="{DynamicResource MenuFlyoutPresenterBorderThemeThickness}"
										Padding="{DynamicResource MenuFlyoutPresenterThemePadding}"
										MaxWidth="{DynamicResource FlyoutThemeMaxWidth}"
										MinHeight="{DynamicResource MenuFlyoutThemeMinHeight}"
										HorizontalAlignment="Stretch"
										CornerRadius="{DynamicResource OverlayCornerRadius}">
									<ScrollViewer Classes="menuscroller">
										<ItemsPresenter Name="PART_ItemsPresenter"
														Items="{TemplateBinding Items}"
														ItemsPanel="{TemplateBinding ItemsPanel}"
														ItemTemplate="{TemplateBinding ItemTemplate}"
														Margin="{DynamicResource MenuFlyoutScrollerMargin}"
														Grid.IsSharedSizeScope="True" />
									</ScrollViewer>
								</Border>
							</Popup>
						</Panel>
					</Border>
				</ControlTemplate>
			</Setter>
		</Style>
		<Style Selector="Button:pointerover /template/ ContentPresenter">
			<Setter Property="Background" Value="LightGray"/>
		</Style>
		<Style Selector="Button:pressed /template/ ContentPresenter">
			<Setter Property="Background" Value="White"/>
		</Style>
		<Style Selector="Button[IsEnabled=false] /template/ ContentPresenter">
			<Setter Property="Opacity" Value="0.5"/>
			<Setter Property="Background" Value="Transparent"/>
		</Style>
		<Style Selector="Button.hyperlink">
			<Setter Property="Background" Value="Transparent" />
			<Setter Property="BorderThickness" Value="0" />
			<Setter Property="Foreground" Value="{DynamicResource ThemeForegroundBrush}" />
			<Setter Property="HorizontalAlignment" Value="Center" />
			<Setter Property="Cursor" Value="Hand" />
		</Style>
		<Style Selector="Button.status">
			<Setter Property="Foreground" Value="{DynamicResource UpdateAvailableBrush}" />
		</Style>
		<Style Selector="Button.status[Tag=Broken]">
			<Setter Property="Foreground" Value="{DynamicResource UpdateBrokenBrush}" />
		</Style>
		<Style Selector="Button.status[Tag=Unofficial]">
			<Setter Property="Foreground" Value="{DynamicResource UpdateUnofficialBrush}" />
		</Style>
		<Style Selector="Button.hyperlink:pointerover /template/ ContentPresenter">
			<Setter Property="Background" Value="Transparent" />
			<Setter Property="TextBlock.Foreground" Value="White" />
		</Style>
		<Style Selector="Button.hyperlink:pressed /template/ ContentPresenter">
			<Setter Property="Background" Value="Transparent" />
			<Setter Property="TextBlock.Foreground" Value="{DynamicResource HighlightForegroundBrush}" />
		</Style>
		<Style Selector="Button#exitButton:pointerover /template/ ContentPresenter">
			<Setter Property="Background" Value="Red"/>
		</Style>
		<Style Selector="Button#exitButton:pressed /template/ ContentPresenter">
			<Setter Property="Background" Value="Pink"/>
		</Style>
		<Style Selector="ComboBoxItem">
			<Setter Property="FontWeight" Value="Bold"/>
			<Setter Property="Foreground" Value="{DynamicResource ThemeForegroundBrush}"/>
			<Setter Property="Background" Value="{DynamicResource ComboBoxItemBackgroundBrush}"/>
		</Style>
		<Style Selector="ComboBox">
			<Setter Property="Background" Value="Transparent" />
			<Setter Property="BorderBrush" Value="{DynamicResource ThemeBorderMidBrush}" />
			<Setter Property="BorderThickness" Value="{DynamicResource ThemeBorderThickness}" />
			<Setter Property="HorizontalContentAlignment" Value="Stretch" />
			<Setter Property="VerticalContentAlignment" Value="Center" />
			<Setter Property="Padding" Value="4" />
			<Setter Property="MinHeight" Value="20" />
			<Setter Property="PlaceholderForeground" Value="{DynamicResource ThemeForegroundBrush}" />
			<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled" />
			<Setter Property="Template">
				<ControlTemplate>
					<Border Name="border"
							Background="{TemplateBinding Background}"
							BorderBrush="{TemplateBinding BorderBrush}"
							BorderThickness="{TemplateBinding BorderThickness}"
							CornerRadius="{TemplateBinding CornerRadius}">
						<Grid ColumnDefinitions="*,Auto">
							<TextBlock Name="PlaceholderTextBlock"
									   Grid.Column="0"
									   HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
									   VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
									   Margin="{TemplateBinding Padding}"
									   Text="{TemplateBinding PlaceholderText}"
									   Foreground="{TemplateBinding PlaceholderForeground}"
									   IsVisible="{TemplateBinding SelectionBoxItem, Converter={x:Static ObjectConverters.IsNull}}" />
							<ContentControl Content="{TemplateBinding SelectionBoxItem}"
											ContentTemplate="{TemplateBinding ItemTemplate}"
											Margin="{TemplateBinding Padding}"
											VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
											HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" />
							<ToggleButton Name="toggle"
										  BorderThickness="0"
										  Background="Transparent"
										  ClickMode="Press"
										  Focusable="False"
										  IsChecked="{TemplateBinding IsDropDownOpen, Mode=TwoWay}"
										  Grid.Column="1">
								<Path Fill="{DynamicResource ThemeForegroundBrush}"
									  Width="8"
									  Height="4"
									  Stretch="Uniform"
									  HorizontalAlignment="Center"
									  VerticalAlignment="Center"
									  Data="F1 M 301.14,-189.041L 311.57,-189.041L 306.355,-182.942L 301.14,-189.041 Z" />
							</ToggleButton>
							<Popup Name="PART_Popup"
								   IsOpen="{TemplateBinding IsDropDownOpen, Mode=TwoWay}"
								   MinWidth="{Binding Bounds.Width, RelativeSource={RelativeSource TemplatedParent}}"
								   MaxHeight="{TemplateBinding MaxDropDownHeight}"
								   PlacementTarget="{TemplateBinding}"
								   IsLightDismissEnabled="True">
								<Border Background="{DynamicResource ThemeBackgroundBrush}"
										BorderBrush="{DynamicResource ThemeBorderMidBrush}"
										BorderThickness="1">
									<ScrollViewer HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
												  VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}">
										<ItemsPresenter Name="PART_ItemsPresenter"
														Items="{TemplateBinding Items}"
														ItemsPanel="{TemplateBinding ItemsPanel}"
														ItemTemplate="{TemplateBinding ItemTemplate}"
														VirtualizationMode="{TemplateBinding VirtualizationMode}" />
									</ScrollViewer>
								</Border>
							</Popup>
						</Grid>
					</Border>
				</ControlTemplate>
			</Setter>
		</Style>
		<Style Selector="ComboBoxItem:pointerover /template/ ContentPresenter">
			<Setter Property="Background" Value="{DynamicResource HighlightBrush}" />
		</Style>
		<Style Selector="ComboBoxItem:selected /template/ ContentPresenter">
			<Setter Property="Background" Value="{DynamicResource ComboBoxItemSelectedBackgroundBrush}"/>
		</Style>
		<Style Selector="ComboBox /template/ Path#DropDownGlyph">
			<Setter Property="Fill" Value="{DynamicResource HighlightForegroundBrush}"/>
		</Style>
		<Style Selector="CheckBox:checked /template/ Border#NormalRectangle">
			<Setter Property="BorderBrush" Value="{DynamicResource ThemeBackgroundBrush}" />
			<Setter Property="Background" Value="{DynamicResource ThemeBackgroundBrush}" />
		</Style>
		<Style Selector="CheckBox:checked /template/ Path#CheckGlyph">
			<Setter Property="Fill" Value="{DynamicResource ThemeForegroundBrush}"/>
		</Style>
		<Style Selector="CheckBox.OptionClickbox:unchecked /template/ Border#NormalRectangle">
			<Setter Property="BorderBrush" Value="{DynamicResource HighlightForegroundBrush}" />
		</Style>
		<Style Selector="CheckBox.OptionClickbox:checked /template/ Border#NormalRectangle">
			<Setter Property="BorderBrush" Value="{DynamicResource HighlightForegroundBrush}" />
		</Style>
		<Style Selector="CheckBox.OptionClickbox:pointerover /template/ ContentPresenter#ContentPresenter">
			<Setter Property="TextBlock.Foreground" Value="{DynamicResource HighlightForegroundBrush}" />
		</Style>
		<Style Selector="DataGridCell.centered">
			<Setter Property="TextBlock.TextAlignment" Value="Center"/>
			<Setter Property="TextBlock.HorizontalAlignment" Value="Center"/>
			<Setter Property="TextBlock.VerticalAlignment" Value="Center"/>
		</Style>
		<Style Selector="DataGridColumnHeader">
			<Setter Property="FontWeight" Value="Bold"/>
			<Setter Property="Foreground" Value="{DynamicResource ThemeForegroundBrush}"/>
			<Setter Property="Background" Value="{DynamicResource DataGridHeaderBrush}"/>
		</Style>
		<Style Selector="DataGridColumnHeader[Content=Enabled]">
			<Setter Property="Margin" Value="-13 0 0 0"/>
			<Setter Property="Foreground" Value="{DynamicResource ThemeForegroundBrush}"/>
			<Setter Property="Background" Value="{DynamicResource DataGridHeaderBrush}"/>
		</Style>
		<Style Selector="DataGridRow:selected /template/ Rectangle#BackgroundRectangle">
			<Setter Property="Fill" Value="{DynamicResource HighlightForegroundBrush}"/>
		</Style>
		<Style Selector="ListBoxItem">
			<Setter Property="HorizontalContentAlignment" Value="Center" />
		</Style>
		<Style Selector="ListBoxItem:pointerover /template/ ContentPresenter">
			<Setter Property="Background" Value="Transparent"/>
			<Setter Property="HorizontalContentAlignment" Value="Center" />
		</Style>
		<Style Selector="ListBoxItem:selected /template/ ContentPresenter">
			<Setter Property="Background" Value="Transparent"/>
		</Style>
		<Style Selector="TextBox:focus">
			<Setter Property="Foreground" Value="White"/>
		</Style>
		<Style Selector="TextBox:focus /template/ Border">
			<Setter Property="BorderBrush" Value="{DynamicResource ThemeForegroundBrush}"/>
			<Setter Property="Background" Value="{DynamicResource ThemeControlMidBrush}"/>
		</Style>
		<Style Selector="TextBox:not(:focus)">
			<Setter Property="Foreground" Value="{DynamicResource ThemeForegroundBrush}"/>
			<Setter Property="Background" Value="{DynamicResource ThemeBackgroundBrush}"/>
		</Style>
	</Window.Styles>

	<NativeMenu.Menu>
		<NativeMenu>
			<NativeMenuItem Header="{i18n:Translate ui.main_window.menu_headers.file}">
				<NativeMenu>
					<NativeMenuItem Header="{i18n:Translate ui.main_window.menu_items.add_mod}" Click="AddMod_Click" />
					<NativeMenuItemSeparator/>
					<NativeMenuItem Header="{i18n:Translate ui.main_window.menu_items.start_smapi}" Click="Smapi_Click" />
					<NativeMenuItemSeparator/>
					<NativeMenuItem Header="{i18n:Translate ui.main_window.menu_items.exit}" Click="Exit_Click" />
				</NativeMenu>
			</NativeMenuItem>
			<NativeMenuItem Header="{i18n:Translate ui.main_window.menu_headers.view}">
				<NativeMenu>
					<NativeMenuItem Header="{i18n:Translate ui.main_window.menu_items.settings}" Click="Settings_Click" />
					<NativeMenuItemSeparator/>
					<NativeMenuItem Header="{i18n:Translate ui.main_window.menu_items.stardrop_log_file}" Click="LogFile_Click" />
					<NativeMenuItem Header="{i18n:Translate ui.main_window.menu_items.smapi_log_file}" Click="SmapiLogFile_Click" />
				</NativeMenu>
			</NativeMenuItem>
			<NativeMenuItem Header="{i18n:Translate ui.main_window.menu_headers.tools}">
				<NativeMenu>
					<NativeMenuItem Header="{i18n:Translate ui.main_window.menu_items.refresh_mod_list}" Click="ModListRefresh_Click" />
					<NativeMenuItem Header="{i18n:Translate ui.main_window.menu_items.check_for_mod_updates}" Click="ModUpdateCheck_Click" />
					<NativeMenuItemSeparator/>
					<NativeMenuItem Header="{i18n:Translate ui.main_window.menu_items.enable_all_mods}" Click="EnableAllMods_Click" />
					<NativeMenuItem Header="{i18n:Translate ui.main_window.menu_items.disable_all_mods}" Click="DisableAllMods_Click" />
					<NativeMenuItemSeparator/>
					<NativeMenuItem Header="{i18n:Translate ui.main_window.menu_items.check_for_stardrop_update}" Click="StardropUpdate_Click" />
					<NativeMenuItem Header="{i18n:Translate ui.main_window.menu_items.stardrop_repository}" Command="{Binding OpenBrowser}" CommandParameter="https://github.com/Floogen/Stardrop"/>
				</NativeMenu>
			</NativeMenuItem>
		</NativeMenu>
	</NativeMenu.Menu>

	<Grid>
		<Grid.RowDefinitions>
			<RowDefinition Height="Auto" />
			<RowDefinition Height="10" />
			<RowDefinition Height="Auto" />
			<RowDefinition Height="*" />
			<RowDefinition Height="Auto" />
			<RowDefinition Height="Auto" />
		</Grid.RowDefinitions>

		<Grid.ColumnDefinitions>
			<ColumnDefinition Width="2*" />
			<ColumnDefinition Width="Auto" />
		</Grid.ColumnDefinitions>

		<Border Name="menuBorder" Grid.Row="0" BorderBrush="{DynamicResource HighlightBrush}" BorderThickness="0 0 0 2" Grid.ColumnSpan="2">
			<Menu Name="mainMenu" IsVisible="{Binding ShowMainMenu}" HorizontalAlignment="Left" KeyboardNavigation.TabNavigation="None">
				<Image Name="menuIcon" Source="/Assets/icon.ico" Stretch="None"/>
				<MenuItem Header="{i18n:Translate ui.main_window.menu_headers.file}" Margin="-10 0 0 0" Classes="Bar">
					<MenuItem Header="{i18n:Translate ui.main_window.menu_items.add_mod}" Click="AddMod_Click" Classes="Bar"/>
					<Separator/>
					<MenuItem Header="{i18n:Translate ui.main_window.menu_items.start_smapi}" Click="Smapi_Click" Classes="Bar"/>
					<Separator/>
					<MenuItem Header="{i18n:Translate ui.main_window.menu_items.exit}" Click="Exit_Click" Classes="Bar"/>
				</MenuItem>
				<MenuItem Header="{i18n:Translate ui.main_window.menu_headers.view}" Margin="-10 0 0 0" Classes="Bar">
					<MenuItem Header="{i18n:Translate ui.main_window.menu_items.settings}" Click="Settings_Click" Classes="Bar"/>
					<Separator/>
					<MenuItem Header="{i18n:Translate ui.main_window.menu_items.stardrop_log_file}" Click="LogFile_Click" Classes="Bar"/>
					<MenuItem Header="{i18n:Translate ui.main_window.menu_items.smapi_log_file}" Click="SmapiLogFile_Click" Classes="Bar"/>
				</MenuItem>
				<MenuItem Header="{i18n:Translate ui.main_window.menu_headers.tools}" Margin="-10 0 0 0" Classes="Bar">
					<MenuItem Header="{i18n:Translate ui.main_window.menu_items.refresh_mod_list}" Click="ModListRefresh_Click" Classes="Bar"/>
					<MenuItem Header="{i18n:Translate ui.main_window.menu_items.check_for_mod_updates}" Click="ModUpdateCheck_Click" Classes="Bar"/>
					<Separator/>
					<MenuItem Header="{i18n:Translate ui.main_window.menu_items.enable_all_mods}" Click="EnableAllMods_Click" Classes="Bar"/>
					<MenuItem Header="{i18n:Translate ui.main_window.menu_items.disable_all_mods}" Click="DisableAllMods_Click" Classes="Bar"/>
					<Separator/>
					<MenuItem Header="{i18n:Translate ui.main_window.menu_items.check_for_stardrop_update}" Click="StardropUpdate_Click" Classes="Bar"/>
					<MenuItem Header="{i18n:Translate ui.main_window.menu_items.stardrop_repository}" Classes="Bar" Command="{Binding OpenBrowser}" CommandParameter="https://github.com/Floogen/Stardrop"/>
				</MenuItem>
			</Menu>
		</Border>
		<TextBlock Text="☆ Stardrop ☆" IsVisible="{Binding ShowTitle}" IsHitTestVisible="False" Grid.Row="0" Grid.ColumnSpan="2" VerticalAlignment="Center" HorizontalAlignment="Center" FontSize="20" Foreground="{DynamicResource ThemeForegroundBrush}" />
		<Menu Name="windowMenu" IsVisible="{Binding ShowWindowMenu}" HorizontalAlignment="Right" KeyboardNavigation.TabNavigation="None" Grid.Column="1">
			<Button Name="minimizeButton" i:Attached.Icon="mdi-window-minimize" Margin="0 0 -10 0" Foreground="{DynamicResource ThemeForegroundBrush}"  Background="Transparent"/>
			<Button Name="maximizeButton" i:Attached.Icon="mdi-window-maximize" Margin="0 0 -10 0" Foreground="{DynamicResource ThemeForegroundBrush}" Background="Transparent"/>
			<Button Name="exitButton" i:Attached.Icon="mdi-close" Margin="0 0 -10 0" Foreground="{DynamicResource ThemeForegroundBrush}" Background="Transparent"/>
		</Menu>
		<!-- ToolBar -->
		<Separator />

		<DockPanel Name="profileBar" Grid.Row="2" Grid.Column="0">
			<TextBlock Text="{i18n:Translate ui.main_window.labels.profile}" Foreground="{DynamicResource ThemeForegroundBrush}" Padding="7" Focusable="False" VerticalAlignment="Center" />
			<ComboBox x:Name="profileComboBox" Background="{DynamicResource ThemeBackgroundBrush}" Foreground="{DynamicResource ThemeForegroundBrush}" VerticalAlignment="Center"  FontWeight="Bold" BorderBrush="{DynamicResource HighlightBrush}" SelectedIndex="0" Width="300">
				<ComboBox.ItemTemplate>
					<DataTemplate>
						<StackPanel>
							<TextBlock Text="{Binding Path=Name}"/>
						</StackPanel>
					</DataTemplate>
				</ComboBox.ItemTemplate>
			</ComboBox>
			<Button Name="editProfilesButton" i:Attached.Icon="mdi-playlist-edit" VerticalAlignment="Center" Margin="5 0 0 0" Foreground="{DynamicResource ThemeForegroundBrush}" Background="Transparent" BorderBrush="{DynamicResource HighlightBrush}"/>
			<Button Name="saveConfigsToProfile" Content="{i18n:Translate ui.main_window.buttons.save_configs}" VerticalAlignment="Center" Margin="5 0 0 0" Foreground="{DynamicResource ThemeForegroundBrush}" Background="Transparent" BorderBrush="{DynamicResource HighlightBrush}"/>
			<StackPanel VerticalAlignment="Center" Orientation="Horizontal" Margin="10 0 0 2">
				<TextBlock Text="{i18n:Translate ui.main_window.labels.enabled_mods}" Foreground="{DynamicResource ThemeForegroundBrush}"/>
				<TextBlock Text="{Binding EnabledModCount}" Foreground="{DynamicResource ThemeForegroundBrush}"/>
				<TextBlock Text=" | " Foreground="{DynamicResource ThemeForegroundBrush}"/>
				<TextBlock Text="{i18n:Translate ui.main_window.labels.total_mods}" Foreground="{DynamicResource ThemeForegroundBrush}"/>
				<TextBlock Text="{Binding Mods.Count}" Foreground="{DynamicResource ThemeForegroundBrush}"/>
			</StackPanel>
		</DockPanel>
		<DockPanel Name="toolBar" Grid.Row="2"  Grid.Column="1">
			<Button Name="smapiButton" IsEnabled="{Binding !IsLocked}" Content="/Assets/icon.ico" Background="Transparent" HorizontalAlignment="Right" Width="60" Height="40" VerticalAlignment="Center"  Margin="0 0 10 0">
				<Panel>
					<Image Source="/Assets/smapi.png" Stretch="Uniform" />
				</Panel>
			</Button>
		</DockPanel>

		<Border Name="dragOverBorder" Margin="10" DragDrop.AllowDrop="True" Grid.Row="3" Grid.ColumnSpan="2" BorderBrush="{DynamicResource HighlightBrush}" BorderThickness="2">
			<DataGrid Name="modGrid" Foreground="{DynamicResource DataGridRowForeground}" Background="{DynamicResource DataGridRowBackground}" AlternatingRowBackground="{DynamicResource AlternativeDataGridRowBackground}" CanUserSortColumns="True" CanUserResizeColumns="True" ScrollViewer.HorizontalScrollBarVisibility="Disabled">
				<DataGrid.Resources>
					<ContextMenu x:Key="GridColumnContextMenu" DataContext="{Binding $parent[DataGrid].DataContext}">
						<!-- <MenuItem Header="{Binding SortText}" Click="ModGridMenuColumn_ChangeSort" />-->
						<!-- <MenuItem Header="Hide" Click="ModGridColumnMenu_ChangeVisibility" />-->
						<MenuItem Header="{Binding RequirementColumnState}" Click="ModGridMenuColumn_ChangeRequirementVisibility"/>
						<MenuItem Header="{i18n:Translate ui.main_window.menu_items.context.cancel}" />
					</ContextMenu>
					<ContextMenu x:Key="GridRowContextMenu">
						<MenuItem Header="{i18n:Translate ui.main_window.menu_items.context.open_containing_folder}" Click="ModGridMenuRow_OpenFolderPath" />
						<MenuItem Header="{i18n:Translate ui.main_window.menu_items.context.open_mod_page}" Click="ModGridMenuRow_OpenModPage" IsVisible="{Binding ModPageUri, Converter={x:Static StringConverters.IsNotNullOrEmpty}}" />
						<MenuItem Header="{Binding ChangeStateText}" Click="ModGridMenuRow_ChangeState" />
						<MenuItem Header="{i18n:Translate ui.main_window.menu_items.context.delete}" Click="ModGridMenuRow_Delete" />
						<MenuItem Header="{i18n:Translate ui.main_window.menu_items.context.cancel}" />
					</ContextMenu>
				</DataGrid.Resources>
				<DataGrid.Styles>
					<Style Selector="DataGridColumnHeader">
						<Setter Property="ContextMenu" Value="{StaticResource GridColumnContextMenu}" />
					</Style>
					<Style Selector="DataGridRow">
						<Setter Property="ContextMenu" Value="{StaticResource GridRowContextMenu}" />
						<Setter Property="ToolTip.Tip" Value="{Binding GetDescriptionToolTip}" />
					</Style>
				</DataGrid.Styles>
				<DataGrid.Columns>
					<DataGridTemplateColumn Header="{i18n:Translate ui.main_window.menu_headers.enabled}" Width="25" CanUserResize="False" CanUserSort="True" SortMemberPath="IsEnabled">
						<DataGridTemplateColumn.CellTemplate>
							<DataTemplate>
								<CheckBox Content="{Binding UniqueId}" IsChecked="{Binding IsEnabled}" Click="EnabledBox_Clicked" Margin="5 0 0 0"/>
							</DataTemplate>
						</DataGridTemplateColumn.CellTemplate>
					</DataGridTemplateColumn>
					<DataGridTemplateColumn SortMemberPath="Name">
						<DataGridTemplateColumn.Header>
							<TextBlock Text="{i18n:Translate ui.main_window.menu_headers.mod_name}" TextAlignment="Center" />
						</DataGridTemplateColumn.Header>
						<DataGridTemplateColumn.CellTemplate>
							<DataTemplate>
								<TextBlock Text="{Binding Name}" TextAlignment="Left" VerticalAlignment="Center" Margin="7 0 0 0" />
							</DataTemplate>
						</DataGridTemplateColumn.CellTemplate>
					</DataGridTemplateColumn>
					<DataGridTextColumn Binding="{Binding UniqueId}" IsVisible="False">
						<DataGridTextColumn.Header>
							<TextBlock Text="{i18n:Translate ui.main_window.menu_headers.unique_id}" TextAlignment="Center" />
						</DataGridTextColumn.Header>
					</DataGridTextColumn>
					<DataGridTextColumn Binding="{Binding Author}" CellStyleClasses="centered">
						<DataGridTextColumn.Header>
							<TextBlock Text="{i18n:Translate ui.main_window.menu_headers.author}" TextAlignment="Center" />
						</DataGridTextColumn.Header>
					</DataGridTextColumn>
					<DataGridTemplateColumn IsVisible="{Binding ShowRequirements}" SortMemberPath="HardRequirements.Count" CellStyleClasses="centered">
						<DataGridTemplateColumn.Header>
							<TextBlock Text="{i18n:Translate ui.main_window.menu_headers.requirements}" TextAlignment="Center" />
						</DataGridTemplateColumn.Header>
						<DataGridTemplateColumn.CellTemplate>
							<DataTemplate>
								<ListBox Items="{Binding HardRequirements}" Background="Transparent">
									<ListBox.ItemTemplate>
										<DataTemplate>
											<TextBlock Text="{Binding Path=Name}" Foreground="{DynamicResource DataGridRowForeground}" />
										</DataTemplate>
									</ListBox.ItemTemplate>
								</ListBox>
							</DataTemplate>
						</DataGridTemplateColumn.CellTemplate>
					</DataGridTemplateColumn>
					<DataGridTemplateColumn SortMemberPath="MissingRequirements.Count" CellStyleClasses="centered">
						<DataGridTemplateColumn.Header>
							<TextBlock Text="{i18n:Translate ui.main_window.menu_headers.missing_requirements}" TextAlignment="Center" />
						</DataGridTemplateColumn.Header>
						<DataGridTemplateColumn.CellTemplate>
							<DataTemplate>
								<ListBox Items="{Binding MissingRequirements}" Background="Transparent">
									<ListBox.ItemTemplate>
										<DataTemplate>
											<Button Content="{Binding Path=Name}" Classes="hyperlink" Command="{Binding $parent[DataGrid].DataContext.OpenBrowser}" CommandParameter="{Binding GenericLink}" Foreground="{DynamicResource HighlightForegroundBrush}"/>
										</DataTemplate>
									</ListBox.ItemTemplate>
								</ListBox>
							</DataTemplate>
						</DataGridTemplateColumn.CellTemplate>
					</DataGridTemplateColumn>
					<DataGridTextColumn Binding="{Binding ParsedVersion}" CellStyleClasses="centered">
						<DataGridTextColumn.Header>
							<TextBlock Text="{i18n:Translate ui.main_window.menu_headers.version}" TextAlignment="Center" />
						</DataGridTextColumn.Header>
					</DataGridTextColumn>
					<DataGridTemplateColumn SortMemberPath="HasConfig" CellStyleClasses="centered" >
						<DataGridTemplateColumn.Header>
							<TextBlock Text="{i18n:Translate ui.main_window.menu_headers.configuration}" TextAlignment="Center" />
						</DataGridTemplateColumn.Header>
						<DataGridTemplateColumn.CellTemplate>
							<DataTemplate>
								<Button Content="{i18n:Translate ui.main_window.hyperlinks.click_to_open}" Classes="hyperlink" IsVisible="{Binding HasConfig}" Command="{Binding $parent[DataGrid].DataContext.OpenBrowser}" CommandParameter="{Binding Config.FilePath}" Foreground="{DynamicResource HighlightForegroundBrush}"/>
							</DataTemplate>
						</DataGridTemplateColumn.CellTemplate>
					</DataGridTemplateColumn>
					<DataGridTemplateColumn SortMemberPath="ParsedStatus" CellStyleClasses="centered" >
						<DataGridTemplateColumn.Header>
							<TextBlock Text="{i18n:Translate ui.main_window.menu_headers.status}" TextAlignment="Center" />
						</DataGridTemplateColumn.Header>
						<DataGridTemplateColumn.CellTemplate>
							<DataTemplate>
								<Button Name="statusButton" Tag="{Binding Status, Converter={StaticResource EnumToStringConverter}}" Classes="hyperlink status" Content="{Binding ParsedStatus}" Command="{Binding $parent[DataGrid].DataContext.OpenBrowser}" CommandParameter="{Binding UpdateUri}"/>
							</DataTemplate>
						</DataGridTemplateColumn.CellTemplate>
					</DataGridTemplateColumn>
				</DataGrid.Columns>
			</DataGrid>
		</Border>
		<DockPanel Name="filterBar" Grid.Row="4" Grid.Column="0" Margin="7 0 0 5">
			<TextBox Name="searchBox" Watermark="{i18n:Translate ui.main_window.labels.filter}" Height="10" Width="250" BorderBrush="{DynamicResource HighlightBrush}" HorizontalAlignment="Left"/>
			<ComboBox x:Name="searchFilterColumnBox" Margin="5 2 0 0" Background="{DynamicResource ThemeBackgroundBrush}" Foreground="{DynamicResource ThemeForegroundBrush}" FontWeight="Bold" BorderBrush="{DynamicResource HighlightBrush}" SelectedIndex="0" Width="150">
				<ComboBoxItem Content="{i18n:Translate ui.main_window.combobox.mod_name}" />
				<ComboBoxItem Content="{i18n:Translate ui.main_window.combobox.author}" />
				<ComboBoxItem Content="{i18n:Translate ui.main_window.combobox.requirements}" />
			</ComboBox>
			<StackPanel Orientation="Horizontal" Margin="10 0 10 0">
				<Separator Width="1" Height="15" Background="{DynamicResource HighlightBrush}" />
			</StackPanel>
			<ComboBox x:Name="disabledModFilterColumnBox" Margin="0 2 0 0" Background="{DynamicResource ThemeBackgroundBrush}" Foreground="{DynamicResource ThemeForegroundBrush}" FontWeight="Bold" BorderBrush="{DynamicResource HighlightBrush}" SelectedIndex="0" Width="200">
				<ComboBoxItem Content="{i18n:Translate ui.main_window.combobox.show_all_mods}" />
				<ComboBoxItem Content="{i18n:Translate ui.main_window.buttons.hide_disabled_mods}" />
				<ComboBoxItem Content="{i18n:Translate ui.main_window.combobox.hide_enabled_mods}" />
			</ComboBox>
			<CheckBox Name="showUpdatableMods" Content="{i18n:Translate ui.main_window.buttons.show_updatable_mods}" Foreground="{DynamicResource ThemeForegroundBrush}" Margin="7 0 0 0" Classes="OptionClickbox"/>
		</DockPanel>
		<Border Grid.Row="5" Grid.ColumnSpan="2" BorderBrush="{DynamicResource HighlightBrush}" BorderThickness="0 2 0 0">
			<Button Content="{Binding Version}" Classes="hyperlink" Command="{Binding OpenBrowser}" CommandParameter="https://www.nexusmods.com/stardewvalley/mods/10455" HorizontalAlignment="Right" VerticalAlignment="Center" Margin="0 0 10 0"/>
		</Border>
		<Menu Grid.Row="5" Grid.Column="0" Name="statusBar" HorizontalAlignment="Left" KeyboardNavigation.TabNavigation="None">
			<MenuItem Header="{Binding UpdateStatusText}" Click="ModUpdateCheck_Click" Classes="Bar"/>
		</Menu>
	</Grid>
</Window>
